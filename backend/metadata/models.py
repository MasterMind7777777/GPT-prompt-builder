from django.db import models
from django.contrib.postgres.fields import JSONField
from prompt_templates.models import Template, TemplatePart
from analytics.models import Outcome
from django.contrib.auth import get_user_model

User = get_user_model()


class Tag(models.Model):
    """
    Represents a tag that can be associated with templates, template parts, or outcomes.
    Helps in categorizing and searching templates effectively.
    """

    name = models.CharField(max_length=255, unique=True)
    templates = models.ManyToManyField(Template, blank=True)
    template_parts = models.ManyToManyField(TemplatePart, blank=True)
    # Assuming an Outcome model is defined
    outcomes = models.ManyToManyField(Outcome, blank=True)

    def __str__(self):
        return self.name


class Prompt(models.Model):
    """
    Represents finalized prompts which are generated by filling the templates.
    Stores information such as the filled content and the date it was generated.
    """

    template = models.ForeignKey(Template, on_delete=models.CASCADE)
    filled_content = JSONField()
    date_generated = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"Prompt from Template: {self.template.name}, Generated on: {self.date_generated}"

    class Meta:
        ordering = ["-date_generated"]
